import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.impute import SimpleImputer

# Load the dataset
dataset = pd.read_csv("/content/drive/MyDrive/ghazal/programming/Artificial Intelligence/machine learning/GrowIntern/Car Prediction/dataset.csv")

# Clean the 'Mileage' column
dataset['Mileage'] = dataset['Mileage'].astype(str)
dataset['Mileage'] = dataset['Mileage'].str.replace(' kmpl', '').str.replace(' km/kg', '')
dataset['Mileage'] = pd.to_numeric(dataset['Mileage'], errors='coerce')

# Clean the 'Engine' column
dataset['Engine'] = dataset['Engine'].str.replace(' CC', '')
dataset['Engine'] = pd.to_numeric(dataset['Engine'], errors='coerce')

# Drop rows with missing 'Mileage' and 'Engine' values
dataset = dataset.dropna(subset=['Mileage', 'Engine'])

# Define features and target variable
features = dataset[['Mileage', 'Seats', 'Engine']]
target = dataset['Price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Initialize the imputer with mean strategy (you can also use median or mode)
imputer = SimpleImputer(strategy='mean')

# Fit and transform the imputer on your training data
X_train_imputed = imputer.fit_transform(X_train)

# Apply imputer on your test data
X_test_imputed = imputer.transform(X_test)

# Initialize and train the linear regression model
model = LinearRegression()
model.fit(X_train_imputed, y_train)

# Make predictions on the imputed test data
predictions = model.predict(X_test_imputed)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
r2 = r2_score(y_test, predictions)
print('Mean Squared Error:', mse)
print('R^2 Score:', r2)

# Example usage: Predict the price of a car with given features
mileage = 50000
seats = 5
engine_size = 1248  # Provide the engine size without 'CC' suffix

# Impute the input values before making a prediction
input_features = imputer.transform([[mileage, seats, engine_size]])

predicted_price = model.predict(input_features)
print('Predicted Price:', predicted_price[0])
